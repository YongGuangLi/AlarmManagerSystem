#ifndef DATAMODEL_H
#define DATAMODEL_H

/************************************************************************
描述： 公共数据模型
作者： WANGXL
时间： 2019-01-15
************************************************************************/

#include <QObject>
#include <QTableWidget>
#include <QNetworkInterface>
#include <QHostAddress>

#include "CommonObject.h"

#pragma execution_character_set("utf-8")
class DataModel : public QObject
{
    Q_OBJECT
public:
    /***************************************************************************
    *功能：获取实例
    *输入：无
    *输出：无
    *时间：2018-12-24
    *作者：WANGXL
    ***************************************************************************/
    static DataModel* getInstance();

    /***************************************************************************
    *功能：设置当前登录的用户
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    void setCurrentLoginUser(User_Info info);

    /***************************************************************************
    *功能：获取当前登录的用户
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    User_Info getCurrentLoginUser();

    /***************************************************************************
    *功能：设置用户功能读写权限
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    void setAllUserFuncRwMap(QMap<QString, QMap<QString, RoleMenu_Info> > funcReadWriteMap);

    /***************************************************************************
    *功能：获取用户功能读写权限根据角色ID
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    QMap<QString, RoleMenu_Info> getUserFuncRwMapByRoleId(QString roleId);

    /***************************************************************************
    *功能：设置所有的用户信息
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    void setAllUserInfoMap(QMap<QString, User_Info> queryMap_Users);

    /***************************************************************************
    *功能：根据名称找用户
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    bool findUserInfoByName(QString name, User_Info &info);

    /***************************************************************************
    *功能：统计已经登录的用户个数
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    int countHaveLoginUsers();

    /***************************************************************************
    *功能：设置系统常用配置信息
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    void setCommonConfInfo(Data_CommonConfig data_CommonConfig);

    /***************************************************************************
    *功能：获取系统常用配置信息
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    Data_CommonConfig getCommonConfInfo();

    /***************************************************************************
    *功能：获取密码有效时间(秒)
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    qint64 getPwdActiveTimeLimitCur();

    /***************************************************************************
    *功能：获取登录失败次数限制
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    int getLoginFailedLimitCur();

    /***************************************************************************
    *功能：获取账户锁定时间(秒)
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    int getUserLockTimeLimitCur();

    /***************************************************************************
    *功能：获取登录连接个数限制
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    int getLoginUsersLimitCur();

    /***************************************************************************
    *功能：获取登录超时时间，没有操作时间(秒)
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    int getLoginNoOperTimeLimitCur();

    /***************************************************************************
    *功能：获取装置cpu使用率阈值
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    int getDeviceCpuLimit();

    /***************************************************************************
    *功能：获取装置内存使用率阈值
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    int getDeviceMemLimit();

    /***************************************************************************
    *功能：获取装置磁盘使用率阈值
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    int getDeviceStorageLimit();

    /***************************************************************************
    *功能：更新表格行号
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    void updateTableRowNo(QTableWidget* tableWidget);

    /***************************************************************************
    *功能：判断是否是重要操作
    *输入：funcId:功能ID
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    bool isImportantOper(QString funcId);

    /***************************************************************************
    *功能：判断是否是可以登录的地址
    *输入：无
    *输出：无
    *时间：2019-01-15
    *作者：WANGXL
    ***************************************************************************/
    bool isCanLoginAddr();

    /***************************************************************************
    *功能：根据设备类型，设备子类型获取资产设备类型描述
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    QString getAssetDeviceTypeDesc(QString type, QString subType);

    /***************************************************************************
    *功能：设置事件解析相关数据
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    void setData_EventDistribute(Data_EventDistribute data_EventDistribute);

    /***************************************************************************
    *功能：获取当前功能ID对应的日志类型串('日志类型_日志子类型','日志类型_日志子类型')
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    QString getLogTypeStrByFuncId(QString funcId);

    /***************************************************************************
    *功能：根据功能ID获取表格表头
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    QStringList getHeadersByFuncId(QString funcId);

    /***************************************************************************
    *功能：根据功能ID获取日志展示
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    QStringList getLogDispByFuncId(Fromalized_LogInfo logInfo, QString funcId);

    /***************************************************************************
    *功能：设置所有在事件模型页面展示的功能ID
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    void setAllEventDispFuncIdList(QStringList allEventDispFuncIdList);

    /***************************************************************************
    *功能：判断该功能ID是不是在事件展示页面显示
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    bool isEventDispFuncId(QString funcId);

    /***************************************************************************
    *功能：可以下载文件的功能ID
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    bool isCanDownloadFileFuncId(QString funcId);

    /***************************************************************************
    *功能：添加一个可以下载文件的功能ID
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    void appendCanDownloadFileFuncId(QString funcId);

    /***************************************************************************
    *功能：数据库当前登录状态
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    void setCurDatabaseStatus(bool flag);

    /***************************************************************************
    *功能：数据库当前登录状态
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    bool getCurDatabaseStatus();

    /***************************************************************************
    *功能：设置系统当前时间
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    void setCurrentSysDateTime(QDateTime dateTime);

    /***************************************************************************
    *功能：获取系统当前时间
    *输入：无
    *输出：无
    *时间：2019-01-23
    *作者：WANGXL
    ***************************************************************************/
    QDateTime getCurrentSysDateTime();



    QMap<QString, stAlarmConfig> getMapAlarmConfig() const;
    stAlarmConfig getAlarmConfig(QString) const;
    void setMapAlarmConfig(const QMap<QString, stAlarmConfig> &value);

signals:

public slots:

private:
    explicit DataModel(QObject *parent = nullptr);
    static DataModel* m_instance;
    User_Info m_currentLoginUser; //当前登录的用户

    QMap<QString, User_Info> m_queryMap_Users; //用户信息
    QMap<QString, QMap<QString, RoleMenu_Info> > m_roleMenuFuncInfoMap; //角色功能菜单<角色ID,<功能ID，读写标志>>
    //<------------常用系统配置页面------------->
    Data_CommonConfig m_data_CommonConfig;
    QStringList m_loginAddrLimitList; //所有的登录地址限制
    QStringList m_importantOperFuncIdList; //重要操作的功能ID

    //<------------事件解析------------->
    Data_EventDistribute m_data_EventDistribute;

    //所有在事件模型页面展示的功能ID
    QStringList m_allEventDispFuncIdList;
    //可以下载文件的功能ID
    QStringList m_allCanDownloadFileFuncIdList;

    QString m_curPageFuncId; //当前页面的功能ID

    bool m_curDatabaseStatus; //数据库当前登录状态

    QDateTime m_sysDatetime; //系统当前时间

    QMap<QString, stAlarmConfig> mapAlarmConfig;

};

#endif // DATAMODEL_H
